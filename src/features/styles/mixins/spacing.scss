$extra-small-spacing-mobile: 0.2rem;
$extra-small-spacing-small: 0.4rem;
$extra-small-spacing-medium: 0.6rem;
$extra-small-spacing-large: 0.8rem;
$extra-small-spacing-extra-large: 1rem;

$extra-small-spacing: (
    null: $extra-small-spacing-mobile,
    480px: $extra-small-spacing-small,
    780px: $extra-small-spacing-medium,
    1024px: $extra-small-spacing-large,
    1440px: $extra-small-spacing-extra-large,
);

$small-spacing-mobile: 1.2rem;
$small-spacing-small: 1.4rem;
$small-spacing-medium: 1.6rem;
$small-spacing-large: 1.8rem;
$small-spacing-extra-large: 2rem;

$small-spacing: (
    null: $small-spacing-mobile,
    480px: $small-spacing-small,
    780px: $small-spacing-medium,
    1024px: $small-spacing-large,
    1440px: $small-spacing-extra-large,
);

$medium-spacing-mobile: 2.4rem;
$medium-spacing-small: 2.8rem;
$medium-spacing-medium: 3.2rem;
$medium-spacing-large: 3.6rem;
$medium-spacing-extra-large: 4rem;

$medium-spacing: (
    null: $medium-spacing-mobile,
    480px: $medium-spacing-small,
    780px: $medium-spacing-medium,
    1024px: $medium-spacing-large,
    1440px: $medium-spacing-extra-large,
);

$large-spacing-mobile: 4.4rem;
$large-spacing-small: 4.8rem;
$large-spacing-medium: 5.2rem;
$large-spacing-large: 5.6rem;
$large-spacing-extra-large: 6rem;

$large-spacing: (
    null: $large-spacing-mobile,
    480px: $large-spacing-small,
    780px: $large-spacing-medium,
    1024px: $large-spacing-large,
    1440px: $large-spacing-extra-large,
);

$extra-large-spacing-mobile: 6.4rem;
$extra-large-spacing-small: 6.8rem;
$extra-large-spacing-medium: 7.2rem;
$extra-large-spacing-large: 7.6rem;
$extra-large-spacing-extra-large: 8rem;

$extra-large-spacing: (
    null: $extra-large-spacing-mobile,
    480px: $extra-large-spacing-small,
    780px: $extra-large-spacing-medium,
    1024px: $extra-large-spacing-large,
    1440px: $extra-large-spacing-extra-large,
);

@mixin spacing($property, $spacing-map) {
    @if $spacing-map ==auto {
        #{$property}: auto;
    } @else {
        @each $spacing-breakpoint, $spacing-size in $spacing-map {
            @if $spacing-breakpoint ==null {
                #{$property}: $spacing-size;
            } @else {
                @media screen and (min-width: $spacing-breakpoint) {
                    #{$property}: $spacing-size;
                }
            }
        }
    }
}

@mixin margin-top($spacing-map) {
    @include spacing(margin-block-start, $spacing-map);

    // @include spacing(margin-top, $spacing-map);

    // @supports (margin-block-start: 1px) {
    //     @include spacing(margin-block-start, $spacing-map);
    // }
}

@mixin margin-bottom($spacing-map) {
    // @include spacing(margin-bottom, $spacing-map);

    // @supports (margin-block-end: 1px) {
    //     @include spacing(margin-block-end, $spacing-map);
    // }

    @include spacing(margin-block-end, $spacing-map);
}

@mixin margin-left($spacing-map) {
    @include spacing(margin-inline-start, $spacing-map);
}
//     @include spacing(margin-left, $spacing-map);

//     @supports (margin-inline-start: 1px) {
//         @include spacing(margin-inline-start, $spacing-map);
//     }
// }

@mixin margin-right($spacing-map) {
    @include spacing(margin-inline-end, $spacing-map);
    // @include spacing(margin-right, $spacing-map);

    // @supports (margin-inline-end: 1px) {
    //     @include spacing(margin-inline-end, $spacing-map);
    // }
}

@mixin margin($spacing-map) {
    @include spacing(margin, $spacing-map);
}

@mixin margin-inline($spacing-map) {
    @include spacing(margin-inline, $spacing-map);
    // @include spacing(margin-right, $spacing-map);
    // @include spacing(margin-left, $spacing-map);

    // @supports (margin-inline: 1px) {
    //     @include spacing(margin-inline, $spacing-map);
    // }
}

@mixin margin-block($spacing-map) {
    @include spacing(margin-block, $spacing-map);
    // @include spacing(margin-top, $spacing-map);
    // @include spacing(margin-bottom, $spacing-map);

    // @supports (margin-block: 1px) {
    //     @include spacing(margin-block, $spacing-map);
    // }
}

@mixin padding-top($spacing-map) {
    @include spacing(padding-top, $spacing-map);

    @supports (padding-block-start: 1px) {
        @include spacing(padding-block-start, $spacing-map);
    }
}

@mixin padding-bottom($spacing-map) {
    @include spacing(padding-block-end, $spacing-map);
    // @include spacing(padding-bottom, $spacing-map);

    // @supports (padding-block-end: 1px) {
    //     @include spacing(padding-block-end, $spacing-map);
    // }
}

@mixin padding-left($spacing-map) {
    @include spacing(padding-inline-start, $spacing-map);
    // @include spacing(padding-left, $spacing-map);

    // @supports (padding-inline-start: 1px) {
    //     @include spacing(padding-inline-start, $spacing-map);
    // }
}

@mixin padding-right($spacing-map) {
    @include spacing(padding-inline-end, $spacing-map);
    // @include spacing(padding-right, $spacing-map);

    // @supports (padding-inline-end: 1px) {
    //     @include spacing(padding-inline-end, $spacing-map);
    // }
}

@mixin padding-inline($spacing-map) {
    @include spacing(padding-inline, $spacing-map);
    // @include spacing(padding-right, $spacing-map);
    // @include spacing(padding-left, $spacing-map);

    // @supports (padding-inline: 1px) {
    //     @include spacing(padding-inline, $spacing-map);
    // }
}

@mixin padding-block($spacing-map) {
    @include spacing(padding-block, $spacing-map);
    // @include spacing(padding-top, $spacing-map);
    // @include spacing(padding-bottom, $spacing-map);

    // @supports (padding-block: 1px) {
    //     @include spacing(padding-block, $spacing-map);
    // }
}

@mixin padding($spacing-map) {
    @include spacing(padding, $spacing-map);
}

@mixin gap($spacing-map) {
    @include spacing(gap, $spacing-map);
}

$spacing-names: (
    extra-small: $extra-small-spacing,
    small: $small-spacing,
    medium: $medium-spacing,
    large: $large-spacing,
    extra-large: $extra-large-spacing,
);

@mixin generate-gaps() {
    @each $name, $sizes in $spacing-names {
        .gap-#{$name} {
            @include gap($sizes);
        }
    }
}

@mixin generate-margins() {
    @each $name, $sizes in $spacing-names {
        .margin-#{$name} {
            @include margin($sizes);
        }

        .mr-#{$name} {
            @include margin-right($sizes);
        }

        .mb-#{$name} {
            @include margin-bottom($sizes);
        }

        .ml-#{$name} {
            @include margin-left($sizes);
        }

        .mt-#{$name} {
            @include margin-top($sizes);
        }

        .margin_inline-#{$name} {
            @include margin-inline($sizes);
        }

        .margin_block-#{$name} {
            @include margin-block($sizes);
        }

        .padding-#{$name} {
            @include padding($sizes);
        }

        .pr-#{$name} {
            @include padding-right($sizes);
        }

        .pb-#{$name} {
            @include padding-bottom($sizes);
        }

        .pl-#{$name} {
            @include padding-left($sizes);
        }

        .pt-#{$name} {
            @include padding-top($sizes);
        }

        .padding_inline-#{$name} {
            @include padding-inline($sizes);
        }

        .padding_block-#{$name} {
            @include padding-block($sizes);
        }
    }
}
